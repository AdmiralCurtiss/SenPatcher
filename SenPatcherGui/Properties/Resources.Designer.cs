//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SenPatcherGui.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SenPatcherGui.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CS1]
        ///
        ///; Whether to apply fixes for errors in the game files.
        ///; This includes all kinds of errors such as typos, incorrect descriptions, incorrect voice clips, etc.
        ///; &apos;true&apos; to enable (default)
        ///; &apos;false&apos; to disable
        ///; You generally want to keep this enabled.
        ///AssetFixes=true
        ///
        ///; Whether to remove the automatic skipping of battle animations when Turbo mode is active.
        ///; &apos;true&apos; to enable (don&apos;t skip animations) (default)
        ///; &apos;false&apos; to disable (skip animations)
        ///RemoveTurboSkip=true
        ///
        ///; Whether to chang [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string senpatcher_settings_cs1 {
            get {
                return ResourceManager.GetString("senpatcher_settings_cs1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CS2]
        ///
        ///; Whether to apply fixes for errors in the game files.
        ///; This includes all kinds of errors such as typos, incorrect descriptions, incorrect voice clips, etc.
        ///; &apos;true&apos; to enable (default)
        ///; &apos;false&apos; to disable
        ///; You generally want to keep this enabled.
        ///AssetFixes=true
        ///
        ///; Whether to remove the automatic skipping of battle animations when Turbo mode is active.
        ///; &apos;true&apos; to enable (don&apos;t skip animations) (default)
        ///; &apos;false&apos; to disable (skip animations)
        ///RemoveTurboSkip=true
        ///
        ///; Whether to chang [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string senpatcher_settings_cs2 {
            get {
                return ResourceManager.GetString("senpatcher_settings_cs2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CS3]
        ///
        ///; Whether to apply fixes for errors in the game files.
        ///; This includes all kinds of errors such as typos, incorrect descriptions, incorrect voice clips, etc.
        ///; &apos;true&apos; to enable (default)
        ///; &apos;false&apos; to disable
        ///; You generally want to keep this enabled.
        ///AssetFixes=true
        ///
        ///; The in-game button remapping feature is semi-broken and disallows several valid settings, including some that are set by default.
        ///; &apos;true&apos; to fix this (default)
        ///; &apos;false&apos; to leave it broken
        ///; You generally want to keep this [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string senpatcher_settings_cs3 {
            get {
                return ResourceManager.GetString("senpatcher_settings_cs3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CS4]
        ///
        ///; Whether to apply fixes for errors in the game files.
        ///; This includes all kinds of errors such as typos, incorrect descriptions, incorrect voice clips, etc.
        ///; &apos;true&apos; to enable (default)
        ///; &apos;false&apos; to disable
        ///; You generally want to keep this enabled.
        ///AssetFixes=true
        ///
        ///; Whether to allow switching the difficulty to Nightmare mid-playthrough.
        ///; The game normally prevents this and only allows switching to the other difficulty settings.
        ///; &apos;true&apos; to enable (allow switching) (default)
        ///; &apos;false&apos;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string senpatcher_settings_cs4 {
            get {
                return ResourceManager.GetString("senpatcher_settings_cs4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Reverie]
        ///
        ///; Whether to apply fixes for errors in the game files.
        ///; This includes all kinds of errors such as typos, incorrect descriptions, incorrect voice clips, etc.
        ///; &apos;true&apos; to enable (default)
        ///; &apos;false&apos; to disable
        ///; You generally want to keep this enabled.
        ///AssetFixes=true
        ///
        ///; This fixes a behavior of the unpatched game where it will fail to enqueue the same music track that is
        ///; currently fading out, which can break various audio transitions if your loading times are too fast.
        ///; &apos;true&apos; to fix [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string senpatcher_settings_reverie {
            get {
                return ResourceManager.GetString("senpatcher_settings_reverie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [TX]
        ///
        ///; Set the language used by the game.
        ///; The game usually reads this from a Steam/GoG setting, but that&apos;s very inconvenient to change, especially on GoG.
        ///; So SenPatcher overrides it with its own setting here.
        ///;
        ///; Language=Japanese
        ///Language=English
        ///
        ///; Skip the startup logos when launching the game.
        ///SkipLogos=True
        ///
        ///; Skip playback of all movie files. Not recommended unless your system has issues playing them.
        ///SkipAllMovies=False
        ///.
        /// </summary>
        internal static string senpatcher_settings_tx {
            get {
                return ResourceManager.GetString("senpatcher_settings_tx", resourceCulture);
            }
        }
    }
}
